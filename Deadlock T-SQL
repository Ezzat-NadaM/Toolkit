/* T-SQL to create deadlock extended event */

CREATE EVENT SESSION [Deadlocks] ON SERVER 
ADD EVENT sqlserver.lock_deadlock(
    ACTION(package0.collect_current_thread_id,package0.event_sequence,package0.process_id,sqlos.scheduler_id,sqlserver.client_pid,sqlserver.database_id,sqlserver.database_name,sqlserver.nt_username,sqlserver.request_id,sqlserver.session_id,sqlserver.sql_text,sqlserver.transaction_id)),
ADD EVENT sqlserver.lock_deadlock_chain(
    ACTION(package0.collect_current_thread_id,package0.event_sequence,package0.process_id,sqlos.scheduler_id,sqlserver.client_pid,sqlserver.database_id,sqlserver.database_name,sqlserver.nt_username,sqlserver.request_id,sqlserver.session_id,sqlserver.sql_text,sqlserver.transaction_id)),
ADD EVENT sqlserver.xml_deadlock_report(
    ACTION(package0.collect_current_thread_id,package0.event_sequence,package0.process_id,sqlos.scheduler_id,sqlserver.client_pid,sqlserver.database_id,sqlserver.database_name,sqlserver.nt_username,sqlserver.request_id,sqlserver.session_id,sqlserver.sql_text,sqlserver.transaction_id)) 
ADD TARGET package0.ring_buffer(SET max_events_limit=(10000))
WITH (MAX_MEMORY=4096 KB,EVENT_RETENTION_MODE=ALLOW_SINGLE_EVENT_LOSS,MAX_DISPATCH_LATENCY=30 SECONDS,MAX_EVENT_SIZE=0 KB,MEMORY_PARTITION_MODE=NONE,TRACK_CAUSALITY=OFF,STARTUP_STATE=OFF)
GO


